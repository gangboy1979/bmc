/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ami_iusb_HarddiskRedir */

#ifndef _Included_com_ami_iusb_HarddiskRedir
#define _Included_com_ami_iusb_HarddiskRedir
#ifdef __cplusplus
extern "C" {
#endif
#undef com_ami_iusb_HarddiskRedir_MIN_PRIORITY
#define com_ami_iusb_HarddiskRedir_MIN_PRIORITY 1L
#undef com_ami_iusb_HarddiskRedir_NORM_PRIORITY
#define com_ami_iusb_HarddiskRedir_NORM_PRIORITY 5L
#undef com_ami_iusb_HarddiskRedir_MAX_PRIORITY
#define com_ami_iusb_HarddiskRedir_MAX_PRIORITY 10L
#undef com_ami_iusb_HarddiskRedir_PORT
#define com_ami_iusb_HarddiskRedir_PORT 5123L
#undef com_ami_iusb_HarddiskRedir_START_LOCAL_IMAGE_REDIRECTION
#define com_ami_iusb_HarddiskRedir_START_LOCAL_IMAGE_REDIRECTION 240L
#undef com_ami_iusb_HarddiskRedir_DEVICE_REDIRECTION_ACK
#define com_ami_iusb_HarddiskRedir_DEVICE_REDIRECTION_ACK 241L
#undef com_ami_iusb_HarddiskRedir_CONNECTION_ACCEPTED
#define com_ami_iusb_HarddiskRedir_CONNECTION_ACCEPTED 1L
#undef com_ami_iusb_HarddiskRedir_CONNECTION_DENIED
#define com_ami_iusb_HarddiskRedir_CONNECTION_DENIED 2L
#undef com_ami_iusb_HarddiskRedir_MAX_READ_SECTORS
#define com_ami_iusb_HarddiskRedir_MAX_READ_SECTORS 256L
#undef com_ami_iusb_HarddiskRedir_MAX_READ_SIZE
#define com_ami_iusb_HarddiskRedir_MAX_READ_SIZE 131072L
/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    listHarddiskDrives
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_ami_iusb_HarddiskRedir_listHardDrives
  (JNIEnv *, jobject);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    listHarddiskDrives
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_ami_iusb_HarddiskRedir_listHardDrivesFixed
  (JNIEnv *, jobject);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    newHarddiskReader
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_ami_iusb_HarddiskRedir_newHarddiskReader
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    deleteHarddiskReader
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ami_iusb_HarddiskRedir_deleteHarddiskReader
  (JNIEnv *, jobject);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    openHarddisk
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jint JNICALL Java_com_ami_iusb_HarddiskRedir_openHarddisk
  (JNIEnv *, jobject,  jbyteArray,jboolean);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    closeHarddisk
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_ami_iusb_HarddiskRedir_closeHarddisk
  (JNIEnv *, jobject);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    executeHarddiskSCSICmd
 * Signature: (Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)I
 */
JNIEXPORT jint JNICALL Java_com_ami_iusb_HarddiskRedir_executeHarddiskSCSICmd
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    getVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_ami_iusb_HarddiskRedir_getVersion
  (JNIEnv *, jobject);

/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    GetLEDStatus
 * Signature: ()B
 */
JNIEXPORT jbyte JNICALL Java_com_ami_iusb_HarddiskRedir_GetLEDStatus
  (JNIEnv *, jobject);


/*
 * Class:     com_ami_iusb_HarddiskRedir
 * Method:    Getkeyboard Layout
 * Signature: ()B
 */
JNIEXPORT jbyte JNICALL Java_com_ami_iusb_HarddiskRedir__GetKeyboardName
  (JNIEnv *, jobject);
#ifdef __cplusplus
}
#endif
#endif
